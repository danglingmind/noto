// Common types for file viewers

export interface FileData {
  id: string
  fileName: string
  fileUrl: string
  fileType: 'IMAGE' | 'PDF' | 'VIDEO' | 'WEBSITE'
  fileSize?: number | null
  metadata?: Record<string, unknown> | null
  createdAt: string
}

export interface AnnotationData {
  id: string
  annotationType: 'PIN' | 'BOX' | 'HIGHLIGHT' | 'TIMESTAMP'
  coordinates?: {
    x: number
    y: number
    width?: number
    height?: number
    timestamp?: number
    pageIndex?: number
  }
  target?: {
    space: 'image' | 'pdf' | 'web' | 'video'
    mode: 'region' | 'element' | 'text'
    pageIndex?: number
    timestamp?: number
    box?: {
      x: number
      y: number
      w: number
      h: number
      relativeTo: 'document' | 'element'
    }
    [key: string]: string | number | boolean | object
  }
  style?: {
    color?: string
    opacity?: number
    strokeWidth?: number
    [key: string]: string | number | boolean
  }
  user: {
    id: string
    name?: string
    email: string
    avatarUrl?: string
  }
  comments: CommentData[]
  createdAt: string
  updatedAt: string
}

export interface CommentData {
  id: string
  text: string
  status: 'OPEN' | 'IN_PROGRESS' | 'RESOLVED'
  user: {
    id: string
    name?: string
    email: string
    avatarUrl?: string
  }
  createdAt: string
}

export interface ViewerProps {
  file: FileData
  zoom: number
  annotations: AnnotationData[]
  canEdit: boolean
  onAnnotationCreate: (annotation: CreateAnnotationData) => void
}

export interface CreateAnnotationData {
  type: 'PIN' | 'BOX' | 'HIGHLIGHT' | 'TIMESTAMP'
  coordinates: {
    x: number
    y: number
    width?: number
    height?: number
    timestamp?: number
    pageIndex?: number
  }
  fileId: string
}
